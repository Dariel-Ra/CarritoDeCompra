@inject IJSRuntime JSRuntime

@page "/carts"


<h3>Cart</h3>
@if (CarritoResponses != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>#</th>
                <th>Nombre Producto</th>
                <th>Precio</th>
                <th>Usuario</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var carrito in CarritoResponses)
            {
                <tr>
                    <td>@carrito.CarritoID</td>
                    <td>@carrito.Producto.Nombre</td>
                    <td>@carrito.Producto.Precio</td>
                    <td>@carrito.Usuario.Nombre</td>
                                    <td class="d-print-none">
                    <div class="btn-group">
                        <button class="btn btn-danger" @onclick="()=>Eliminar(carrito)">
                            <span class="oi oi-trash"></span>
                        </button>
                    </div>
                </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Cargando..</p>
}

@code
{
    public string TituloForm => Carritorequest.CarritoID == 0 ?
    "Agregar Producto" : "Modificar Producto";
    public bool ShowForm { get; set; } = false;
    public string Filtro { get; set; } = "";
    public List<ProductoResponse> ProductoResponses { get; set; }
        = new List<ProductoResponse>();
    public List<CarritoResponse> CarritoResponses { get; set; }
        = new List<CarritoResponse>();
    public List<UsuarioResponse> UsuarioResponses { get; set; }
        = new List<UsuarioResponse>();

    public ProductoRequestUpdate request { get; set; } = new ProductoRequestUpdate();
    public CarritoRequest Carritorequest { get; set; } = new CarritoRequest();
    protected override async Task OnInitializedAsync()
    {
        await CargarContactos();
    }

    async Task CargarContactos()
    {
        var response = await carritoServices.Consultar("");
        if (response.Succeeded)
        {
            CarritoResponses = response.Data!;
        }
    }
    
    public async Task Eliminar(CarritoResponse contacto)
    {
        var resultado = await carritoServices.Eliminar(contacto.ToRequest());
        if (resultado.Succeeded)
        {
            await CargarContactos();
            StateHasChanged();
        }
    }
}
